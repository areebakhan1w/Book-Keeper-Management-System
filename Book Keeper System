#include<iostream>
#include<conio.h>
#include<string>
using namespace std;

int ascii = 178;
int i = 0;
char ch = ascii;

struct BookShop {
    int id;
    string name, a_name, p_name;
    float price;
} B[25];

void Heading() {
    cout << "\n ";
    for (int i = 1; i <= 50; i++)
        cout << ch;

    cout << " BOOK SHOP PROJECT ";

    for (int i = 1; i <= 50; i++)
        cout << ch;
}

bool Login() {
    string name;
    int password;

    cout << "\t\t\t\t\t\tBook SHOP MANAGEMENT SYSTEM" << endl;
    cout << "                                        " << endl;
    cout << "\t\t\t\t\t\tWELCOME TO OUR LOGIN PAGE" << endl;
    cout << "                                        " << endl;

    cout << "Enter your user name : ";
    cin >> name;
    cout << "Enter your password : ";
    cin >> password;

    if (name == "admin" && password == 1234) {
        cout << "\t\t\t\t\t\tLOGIN SUCCESSFUL" << endl;
        return true;
    } else {
        cout << "\t\t\t\t\tINCORRECT PASSWORD OR USER NAME. TRY AGAIN" << endl;
        cout << "\t\t\t\t\t\t\tTHANK YOU" << endl;
        return false;
    }
}

void Insert() {
    system("cls");
    Heading();
    cout << "\n\n Enter book ID -> ";
    cin >> B[i].id;

    cout << "\n\n Enter book name -> ";
    cin >> B[i].name;

    cout << "\n\n Enter author name -> ";
    cin >> B[i].a_name;

    cout << "\n\n Enter publisher name -> ";
    cin >> B[i].p_name;

    cout << "\n\n Enter book price -> ";
    cin >> B[i].price;
    i++;

    cout << "\n\n\n " << ch << ch << " INSERT NEW BOOK SUCCESSFULLY " << ch << ch;
}

void Search() {
    system("cls");
    Heading();

    if (i == 0)
        cout << "\n\n " << ch << ch << " Structure is empty " << ch << ch;
    else {
        int t_id;
        int found = 0;
        cout << "\n\n Enter book id for search -> ";
        cin >> t_id;

        for (int a = 0; a < i; a++) {
            if (t_id == B[a].id) {
                cout << "\n\n BOOK NAME -> " << B[a].name;
                cout << "\n\n AUTHOR NAME -> " << B[a].a_name;
                cout << "\n\n PUBLISHER NAME -> " << B[a].p_name;
                cout << "\n\n BOOK PRICE -> " << B[a].price;
                found++;
                break;
            }
        }

        if (found == 0)
            cout << "\n\n\n " << ch << ch << " BOOK ID NOT FOUND " << ch << ch;
    }
}

void Update() {
    system("cls");
    Heading();

    if (i == 0)
        cout << "\n\n " << ch << ch << " Structure is empty " << ch << ch;
    else {
        int t_id;
        int found = 0;
        cout << "\n\n Enter book id for update -> ";
        cin >> t_id;

        for (int a = 0; a < i; a++) {
            if (t_id == B[a].id) {
                cout << "\n\n Enter book name -> ";
                cin >> B[a].name;

                cout << "\n\n Enter author name -> ";
                cin >> B[a].a_name;

                cout << "\n\n Enter publisher name -> ";
                cin >> B[a].p_name;

                cout << "\n\n Enter book price -> ";
                cin >> B[a].price;
                cout << "\n\n\n " << ch << ch << " UPDATE BOOK SUCCESSFULLY " << ch << ch;
                found++;
                break;
            }
        }

        if (found == 0)
            cout << "\n\n\n " << ch << ch << " BOOK ID NOT FOUND " << ch << ch;
    }
}

void Delete() {
    system("cls");
    Heading();

    if (i == 0)
        cout << "\n\n " << ch << ch << " Structure is empty " << ch << ch;
    else {
        int t_id;
        int found = 0;
        cout << "\n\n Enter book id for Delete -> ";
        cin >> t_id;

        for (int a = 0; a < i; a++) {
            if (t_id == B[a].id) {
                for (int k = a; k < i; k++) {
                    B[k].id = B[k + 1].id;
                    B[k].name = B[k + 1].name;
                    B[k].a_name = B[k + 1].a_name;
                    B[k].p_name = B[k + 1].p_name;
                    B[k].price = B[k + 1].price;
                }

                cout << "\n\n\n " << ch << ch << " DELETE BOOK SUCCESSFULLY " << ch << ch;
                found++;
                i--;
                break;
            }
        }

        if (found == 0)
            cout << "\n\n\n " << ch << ch << " BOOK ID NOT FOUND " << ch << ch;
    }
}

void Show() {
    system("cls");
    Heading();

    if (i == 0)
        cout << "\n\n " << ch << ch << " Structure is empty " << ch << ch;
    else {
        for (int a = 0; a < i; a++) {
            cout << "\n\n BOOK ID -> " << B[a].id;
            cout << "\n\n BOOK NAME -> " << B[a].name;
            cout << "\n\n AUTHOR NAME -> " << B[a].a_name;
            cout << "\n\n PUBLISHER NAME -> " << B[a].p_name;
            cout << "\n\n BOOK PRICE -> " << B[a].price << "\n\n";
            for (int m = 1; m <= 26; m++)
                cout << ch;
        }
    }
}

int main() {
    if (!Login()) {
        getch();
        return 0;
    }

    p:
        system("cls");
    int choice;
    Heading();
    cout << "\n\n " << ch << ch << " 1. Insert Book ";
    cout << "\n\n " << ch << ch << " 2. Search Book ";
    cout << "\n\n " << ch << ch << " 3. Update Book ";
    cout << "\n\n " << ch << ch << " 4. Delete Book ";
    cout << "\n\n " << ch << ch << " 5. Show all Books ";
    cout << "\n\n " << ch << ch << " 6. Exit\n\n ";

    for (int i = 1; i <= 50; i++)
        cout << ch;

    cout << "\n\n " << ch << ch << " Enter your choice -> ";
    cin >> choice;

    switch (choice) {
        case 1:
            Insert();
            break;

        case 2:
            Search();
            break;

        case 3:
            Update();
            break;

        case 4:
            Delete();
            break;

        case 5:
            Show();
            break;

        case 6:
            exit(0);

        default:
            cout << "\n\n " << ch << ch << "Please select the correct option " << ch << ch;
    }

    getch();
    goto p;
    return 0;
}
